{"version":3,"file":"static/js/431.572628da.chunk.js","mappings":"0YA2CaA,EAA+B,SAACC,GAC3C,IAAMC,GAAeC,EAAAA,EAAAA,MACRC,GAAQC,EAAAA,EAAAA,IAAe,CAClCC,+BAAgCC,QAAoB,OAAZL,QAAY,IAAZA,OAAY,EAAZA,EAAcM,YADjDC,KAGPC,GAAwBC,EAAAA,EAAAA,YAAoBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,GAAFF,EAAA,GAASA,EAAA,IACpBG,GAA0BJ,EAAAA,EAAAA,UAAqB,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3CE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwBR,EAAAA,EAAAA,UAAS,GAAES,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BhB,EAAAA,EAAAA,UAAS,IAAGiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCpB,EAAAA,EAAAA,UAAS,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAvCE,EAASD,EAAA,GAChBE,GAD8BF,EAAA,IACArB,EAAAA,EAAAA,WAAS,IAAMwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAC7CE,GADcD,EAAA,GAAYA,EAAA,IACIxB,EAAAA,EAAAA,WAAS,IAAK0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,IADeC,EAAAA,EAAAA,MAARC,KACcC,EAAAA,EAAKC,WAAnBC,IAA4ChC,EAAAA,EAAAA,GAAA2B,EAAA,GAAlC,GACjBM,GAAeH,EAAAA,EAAKC,UAEdG,KAFqClC,EAAAA,EAAAA,GAAAiC,GAAA,GAAhC,IACQE,EAAAA,GAAKC,gBACKC,IAE7BC,IAAkCxC,EAAAA,EAAAA,WAAS,GAAMyC,IAAAvC,EAAAA,EAAAA,GAAAsC,GAAA,GAA/BE,IAAFD,GAAA,GAAcA,GAAA,IAsBxBE,GAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAnD,EAAA,OAAAgD,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKC,EAAAA,EAAmBC,OAAQ,CAC9CC,IAAKC,EAAAA,EAAQC,OAAS,cACtBC,OAAQ,QACP,KAAD,EAAAV,EAAAE,EAAAS,MAHK9D,EAAImD,EAAJnD,MAIE+D,QACPC,EAAAA,GAAQD,QAAQ/D,EAAKgE,SAErBA,EAAAA,GAAQC,MAAMjE,EAAKgE,SACpB,wBAAAX,EAAAa,OAAA,GAAAhB,EAAA,KACF,kBAVc,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAYTC,GAAa,eAAAC,GAAAvB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsB,EAAOC,GAAU,IAAAC,EAAA,OAAAzB,EAAAA,EAAAA,KAAAI,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAChBC,EAAAA,EAAmBC,OAAQ,CAC9CC,IAAKC,EAAAA,EAAQC,OAAS,kBAAoBY,EAC1CX,OAAQ,QAEPc,MAAK,SAACC,GACL,OAAIA,EAAI5E,KAAK+D,QACJa,EAAI5E,MAEXgE,EAAAA,GAAQC,MAAMW,EAAI5E,KAAKgE,SAChB,CAAChE,KAAM,CAAC+D,SAAS,IAE5B,IACCc,OAAM,SAACC,GAEN,OADAd,EAAAA,GAAQC,MAAMa,EAAId,SACX,CAAChE,KAAM,CAAC+D,SAAS,GAC1B,IAAG,KAAD,EAAAU,EAAAC,EAAAZ,KAfOW,EAAJzE,KAiBE+D,SACPgB,GAASnE,EAAMY,EAAWJ,GAC3B,wBAAAsD,EAAAR,OAAA,GAAAK,EAAA,KACF,gBArBkBS,GAAA,OAAAV,EAAAH,MAAA,KAAAC,UAAA,KAuBba,GAAe,WACnBjB,EAAAA,GAAQkB,KAAK,WACf,EAEMC,GAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCC,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIH,EAAII,QACH,GAGX,CACER,MAAO,UACPC,UAAW,UACXC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCC,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAF,UACED,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,EAAY,CAACC,KAAM,IAAIC,KAAKR,EAAIS,gBAElC,GAGP,CACEb,MAAO,SACPC,UAAW,WACXC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCC,EAAAA,EAAAA,KAAA,KAAAC,SACM,OAAHH,QAAG,IAAHA,GAAAA,EAAKU,UACJR,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAACC,MAAO,SAAST,SAAC,YAE/BD,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAACC,MAAO,OAAOT,SAAC,cAE7B,GAGR,CACEP,MAAO,GACPC,UAAW,SACXC,OAAQ,SAACC,EAAWC,EAAUC,GAAU,OACtCY,EAAAA,EAAAA,MAAA,OAAKF,MAAO,CAACG,QAAS,OAAQC,eAAgB,YAAYZ,SAAA,EACxDD,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTpB,MAAO,sCACPqB,UAAW,kBAAMpC,GAAiB,OAAHmB,QAAG,IAAHA,OAAG,EAAHA,EAAKhB,GAAG,EACvCkC,SAAU,kBAAMzB,EAAY,EAC5B0B,OAAO,MACPC,WAAW,KAAIjB,UAEfD,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CAACC,MAAMpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAc,SAG/BrB,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CACLG,QAAS,kBA7GS,SAACC,GAC3B5G,EAAQ4G,GACRrE,IAAa,EACf,CA0GyBsE,CAAoB1B,EAAI,EACvCsB,MAAMpB,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,QAEjB,IAKNpC,GAAQ,eAAAqC,GAAArE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoE,EACfC,GAAa,IAAAC,EAAAnG,EAAAoG,EAAAxH,EAAAyH,EAAArD,UAAA,OAAApB,EAAAA,EAAAA,KAAAI,MAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,OAII,OAHjBgE,EAAWE,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GACdrG,EAAaqG,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,GAEhB3F,GAAW,GAAM4F,EAAAnE,KAAA,EACIC,EAAAA,EAAmBC,OAA0B,CAChEC,IACEC,EAAAA,EAAQC,OAAM,eAAAiE,OAAkBP,EAAK,WAAAO,OAAUzG,EAAK,OAAAyG,OAAMN,GAC5D1D,OAAQ,QAEPc,MAAK,SAACC,GACL,OAAOA,CACT,IACCC,OAAM,SAACZ,GACN,MAAO,CAACjE,KAAM,KAChB,IAAG,KAAD,EAAAwH,EAAAE,EAAA5D,MAVG9D,EAAIwH,EAAJxH,QAaLiB,EAASjB,EAAK8H,WAAW9G,OACzBH,EAAQb,EAAK8H,WAAWlH,MACxBS,EAASrB,EAAK8H,WAAW1G,OACzBX,EAAST,EAAKA,OAEhB8B,GAAW,GAAO,wBAAA4F,EAAAxD,OAAA,GAAAmD,EAAA,KACnB,gBAzBaU,GAAA,OAAAX,EAAAjD,MAAA,KAAAC,UAAA,KAoCd,OAPA4D,EAAAA,EAAAA,YAAU,YACgC,MAAhC,OAAJrI,QAAI,IAAJA,OAAI,EAAJA,EAAMsI,WAAe,OAAJtI,QAAI,IAAJA,OAAI,EAAJA,EAAMuI,YACzBC,OAAOC,SAASC,KAAO,KAEzBtD,GAASnE,EAAM,GAAI,GACrB,GAAG,KAGDyF,EAAAA,EAAAA,MAAAR,EAAAA,SAAA,CAAAF,SAAA,EACEU,EAAAA,EAAAA,MAACiC,EAAAA,EAAG,CAACnC,MAAO,CAACoC,UAAW,IAAI5C,SAAA,EAC1BD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAACC,KAAMnG,GAAW,GAAK,GAAGqD,UAC5BD,EAAAA,EAAAA,KAACxD,EAAAA,EAAI,CACHwG,OAAO,WACPC,KAAMvG,GACNwG,SAAU,SAACC,GACThI,EAAQ,GACRL,EAAMmH,OAAS,EACf5C,GAAS,EAAG8D,EAAOtB,IAAKnG,EAC1B,EAAEuE,UAEFD,EAAAA,EAAAA,KAACxD,EAAAA,EAAK4G,KAAI,CAAClD,KAAK,MAAKD,UACnBD,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CACJC,KAAK,QACLC,YAAY,aACZC,QAAQxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAc,IACvBC,aAAa,MACbC,YAAU,WAKlB3D,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CACFC,KAAMnG,GAAW,GAAK,EACtB6D,MAAO,CAACG,QAAS,OAAQC,eAAgB,YAAYZ,UAErDD,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CACLmC,KAAK,QACLlC,MAAMpB,EAAAA,EAAAA,KAAC4D,EAAAA,EAAY,IACnBtC,QAAS,kBAAMnE,IAAW,EAAC8C,SAC5B,qBAMLD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CACJP,KAAK,QACLnH,QAASA,EACTsD,QAASA,GACTqE,WAAYhJ,EACZiJ,OAAQ,CAACC,GAAG,GACZ5B,WAAY,CACV6B,SAAU,SAAC/I,EAAMgJ,GACfvI,EAASuI,GACT7E,GAASnE,EAAMY,EAAWoI,EAC5B,EACA5I,MAAOA,EACP4I,SAAUxI,EACVyI,SAAU,CAAC,gBACXC,iBAAiB,SAM7B,C","sources":["control/pages/roles.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  SearchOutlined,\n  DeleteOutlined,\n  SyncOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useActiveAuthProvider,\n  useGetIdentity,\n  useNavigation,\n} from \"@refinedev/core\";\nimport {\n  Button,\n  Col,\n  Form,\n  Grid,\n  Input,\n  Popconfirm,\n  Row,\n  Table,\n  message,\n} from \"antd\";\nimport {useEffect, useState} from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport simpleRestProvider from \"../../api\";\nimport configs from \"../../configs\";\nimport { RoleData, RegionData } from \"../../interfaces\";\n\ninterface searchFormData {\n  key: string;\n}\n\ninterface roleFormData {\n  name: string;\n}\n\ninterface Props {\n  height?: any;\n  canAdd?: boolean;\n}\n\nexport const ControlRole: React.FC<Props> = (props: Props) => {\n  const authProvider = useActiveAuthProvider();\n  const {data: user} = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const [role, setRole] = useState<RoleData>();\n  const [roles, setRoles] = useState<RoleData[]>([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(20);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [hasNext, setHasNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {push} = useNavigation();\n  const [searchForm] = Form.useForm<searchFormData>();\n  const [form] = Form.useForm<roleFormData>();\n  const breakpoint = Grid.useBreakpoint();\n  const isMobile = !breakpoint.lg;\n\n  const [editModal, setEditModal] = useState(false);\n\n  const showEditRegionModal = (role: RoleData) => {\n    setRole(role);\n    setEditModal(true);\n  };\n\n  const handleOk = () => {\n    setEditModal(false);\n  };\n\n  const handleCancel = () => {\n    setEditModal(false);\n  };\n\n  const onEditFinish = async (values: any) => {\n    const {data} = await simpleRestProvider.custom!({\n      url: configs.apiUrl + \"/region/update/\" + values.id,\n      method: \"post\",\n    });\n  };\n\n  const syncRoles = async () => {\n    const {data} = await simpleRestProvider.custom!({\n      url: configs.apiUrl + \"/sync/roles\",\n      method: \"get\",\n    });\n    if (data.success) {\n      message.success(data.message);\n    } else {\n      message.error(data.message);\n    }\n  };\n\n  const confirmDelete = async (id: number) => {\n    const {data} = await simpleRestProvider.custom!({\n      url: configs.apiUrl + \"/region/delete/\" + id,\n      method: \"get\",\n    })\n      .then((res) => {\n        if (res.data.success) {\n          return res.data;\n        } else {\n          message.error(res.data.message);\n          return {data: {success: false}};\n        }\n      })\n      .catch((err) => {\n        message.error(err.message);\n        return {data: {success: false}};\n      });\n\n    if (data.success) {\n      getRoles(page, searchKey, limit);\n    }\n  };\n\n  const cancelDelete = () => {\n    message.info(\"Canceled\");\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      render: (text: any, row: any, index: any) => (\n        <span>\n          <a>{row.name}</a>\n        </span>\n      ),\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created\",\n      render: (text: any, row: any, index: any) => (\n        <>\n          <span>\n            <ReactTimeAgo date={new Date(row.createdAt)} />\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"isActive\",\n      render: (text: any, row: any, index: any) => (\n        <a>\n          {row?.isActive ? (\n            <span style={{color: \"green\"}}>Active</span>\n          ) : (\n            <span style={{color: \"red\"}}>Inactive</span>\n          )}\n        </a>\n      ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      render: (text: any, row: any, index: any) => (\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n          <Popconfirm\n            title={\"Are you sure to delete this member?\"}\n            onConfirm={() => confirmDelete(row?.id)}\n            onCancel={() => cancelDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n\n          <Button\n            onClick={() => showEditRegionModal(row)}\n            icon={<EditOutlined />}\n          ></Button>\n        </div>\n      ),\n    },\n  ];\n\n  const getRoles = async (\n    start: number,\n    key: string = \"\",\n    limit: number = 25\n  ) => {\n    setLoading(true);\n    const {data} = await simpleRestProvider.custom!<RegionData | any>({\n      url:\n        configs.apiUrl + `/roles?page=${start}&limit=${limit}&q=${key}`,\n      method: \"get\",\n    })\n      .then((res) => {\n        return res;\n      })\n      .catch((error) => {\n        return {data: null};\n      });\n\n    if (data) {\n      setTotal(data.pagination.total);\n      setPage(data.pagination.page);\n      setLimit(data.pagination.limit);\n      setRoles(data.data);\n    }\n    setLoading(false);\n  };\n\n  \n\n  useEffect(() => {\n    if((user?.isAdmin || user?.isStaff) === false){\n      window.location.href = \"/\";\n    }\n    getRoles(page, \"\", 25);\n  }, []);\n\n  return (\n    <>\n      <Row style={{marginTop: 10}}>\n        <Col span={isMobile ? 24 : 20}>\n          <Form<searchFormData>\n            layout=\"vertical\"\n            form={searchForm}\n            onFinish={(values) => {\n              setPage(1);\n              roles.length = 0;\n              getRoles(1, values.key, limit);\n            }}\n          >\n            <Form.Item name=\"key\">\n              <Input\n                size=\"large\"\n                placeholder=\"Search ...\"\n                prefix={<SearchOutlined />}\n                autoComplete=\"off\"\n                allowClear\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col\n          span={isMobile ? 24 : 4}\n          style={{display: \"flex\", justifyContent: \"flex-end\"}}\n        >\n          <Button\n            size=\"large\"\n            icon={<SyncOutlined />}\n            onClick={() => syncRoles()}\n          >\n            Sync Roles\n          </Button>\n        </Col>\n      </Row>\n\n      <div>\n        <Table\n          size=\"small\"\n          loading={loading}\n          columns={columns}\n          dataSource={roles}\n          scroll={{x: true}}\n          pagination={{\n            onChange: (page, pageSize) => {\n              setLimit(pageSize);\n              getRoles(page, searchKey, pageSize);\n            },\n            total: total,\n            pageSize: limit,\n            position: [\"bottomCenter\"],\n            showQuickJumper: true,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n"],"names":["ControlRole","props","authProvider","useActiveAuthProvider","user","useGetIdentity","v3LegacyAuthProviderCompatible","Boolean","isLegacy","data","_useState","useState","_useState2","_slicedToArray","setRole","_useState3","_useState4","roles","setRoles","_useState5","_useState6","page","setPage","_useState7","_useState8","total","setTotal","_useState9","_useState10","limit","setLimit","_useState11","_useState12","searchKey","_useState13","_useState14","_useState15","_useState16","loading","setLoading","_Form$useForm","useNavigation","push","Form","useForm","searchForm","_Form$useForm3","isMobile","Grid","useBreakpoint","lg","_useState17","_useState18","setEditModal","syncRoles","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_yield2","wrap","_context2","prev","next","simpleRestProvider","custom","url","configs","apiUrl","method","sent","success","message","error","stop","apply","arguments","confirmDelete","_ref3","_callee3","id","_yield$then$catch","_context3","then","res","catch","err","getRoles","_x2","cancelDelete","info","columns","title","dataIndex","render","text","row","index","_jsx","children","name","_Fragment","ReactTimeAgo","date","Date","createdAt","isActive","style","color","_jsxs","display","justifyContent","Popconfirm","onConfirm","onCancel","okText","cancelText","Button","icon","DeleteOutlined","onClick","role","showEditRegionModal","EditOutlined","_ref4","_callee4","start","key","_yield$then$catch2","_args4","_context4","length","undefined","concat","pagination","_x3","useEffect","isAdmin","isStaff","window","location","href","Row","marginTop","Col","span","layout","form","onFinish","values","Item","Input","size","placeholder","prefix","SearchOutlined","autoComplete","allowClear","SyncOutlined","Table","dataSource","scroll","x","onChange","pageSize","position","showQuickJumper"],"sourceRoot":""}